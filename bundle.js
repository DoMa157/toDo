(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>c});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,'body {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    --main-color: #FFB6B9;\n    --second-color: #FAE3D9 ;\n    --third-color: #BBDED6;\n    --fourth-color: #61C0BF;\n    font-family: "Satisfy", cursive;\n}\n\nheader {\n    padding: 32px;\n    border-radius: 16px;\n    border: 1px solid var(--second-color);\n    background-color: var(--main-color);\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 32px;\n}\n\nbody>div {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    height: 100vh;\n    width: 100%;\n}\n\n.projects-container {\n    grid-column: 1 / 2;\n    width: 100%;\n    height: 100%;\n    justify-self: start;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--third-color);\n    border-radius: 8px;\n    gap:16px;\n}\n\n.toDos-container {\n    width: 100%;\n    grid-column: 2 / 3;\n    justify-self: center;\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    gap:16px;\n    background-color: var(--second-color);\n    border-radius: 8px;\n}\n.project{\n    width: 100%;\n    height: 50px;\n    background-color: inherit;\n    border-radius: 4px;\n    border: 0;\n    border-bottom: 2px solid var(--main-color);\n}\n\n.project:hover{\n    background-color: var(--main-color);\n}\n.projects-container>div,\n.toDos-container>div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.toDos-container>.form {\n    flex-direction: column;\n    align-items: center;\n    font-size: 24px;\n    width: 100%;\n}\n.toDo{\n    height: 300px;\n    width: 300px;\n    border-radius: 4px;\n    color: var(--fourth-color);\n    background-color: var(--main-color);\n    border: 4px solid var(--fourth-color);\n    border-radius: 6px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.projects-container>div>input {\n    margin: 6px;\n}\n\ninput, button{\n    outline: 0;\n    padding: 8px 16px;\n    border-radius: 6px;\n    border: 3px solid var(--main-color);\n    font-family: "Satisfy", cursive;\n}\n\ninput:focus{\n    outline: 3px solid var(--fourth-color)\n}\n\nbutton:hover{\n    background-color: var(--main-color);\n}\n\nlabel{\n    color: var(--fourth-color);\n    font-size: 24px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,wBAAwB;IACxB,sBAAsB;IACtB,uBAAuB;IACvB,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,mCAAmC;IACnC,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,aAAa;IACb,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,oCAAoC;IACpC,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,oBAAoB;IACpB,aAAa;IACb,eAAe;IACf,WAAW;IACX,QAAQ;IACR,qCAAqC;IACrC,kBAAkB;AACtB;AACA;IACI,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,SAAS;IACT,0CAA0C;AAC9C;;AAEA;IACI,mCAAmC;AACvC;AACA;;IAEI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,mBAAmB;IACnB,eAAe;IACf,WAAW;AACf;AACA;IACI,aAAa;IACb,YAAY;IACZ,kBAAkB;IAClB,0BAA0B;IAC1B,mCAAmC;IACnC,qCAAqC;IACrC,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,kBAAkB;IAClB,mCAAmC;IACnC,+BAA+B;AACnC;;AAEA;IACI;AACJ;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,0BAA0B;IAC1B,eAAe;AACnB",sourcesContent:['body {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    --main-color: #FFB6B9;\r\n    --second-color: #FAE3D9 ;\r\n    --third-color: #BBDED6;\r\n    --fourth-color: #61C0BF;\r\n    font-family: "Satisfy", cursive;\r\n}\r\n\r\nheader {\r\n    padding: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid var(--second-color);\r\n    background-color: var(--main-color);\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    font-size: 32px;\r\n}\r\n\r\nbody>div {\r\n    display: grid;\r\n    grid-template-columns: 1fr 5fr;\r\n    height: 100vh;\r\n    width: 100%;\r\n}\r\n\r\n.projects-container {\r\n    grid-column: 1 / 2;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-self: start;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: var(--third-color);\r\n    border-radius: 8px;\r\n    gap:16px;\r\n}\r\n\r\n.toDos-container {\r\n    width: 100%;\r\n    grid-column: 2 / 3;\r\n    justify-self: center;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    gap:16px;\r\n    background-color: var(--second-color);\r\n    border-radius: 8px;\r\n}\r\n.project{\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: inherit;\r\n    border-radius: 4px;\r\n    border: 0;\r\n    border-bottom: 2px solid var(--main-color);\r\n}\r\n\r\n.project:hover{\r\n    background-color: var(--main-color);\r\n}\r\n.projects-container>div,\r\n.toDos-container>div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.toDos-container>.form {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 24px;\r\n    width: 100%;\r\n}\r\n.toDo{\r\n    height: 300px;\r\n    width: 300px;\r\n    border-radius: 4px;\r\n    color: var(--fourth-color);\r\n    background-color: var(--main-color);\r\n    border: 4px solid var(--fourth-color);\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.projects-container>div>input {\r\n    margin: 6px;\r\n}\r\n\r\ninput, button{\r\n    outline: 0;\r\n    padding: 8px 16px;\r\n    border-radius: 6px;\r\n    border: 3px solid var(--main-color);\r\n    font-family: "Satisfy", cursive;\r\n}\r\n\r\ninput:focus{\r\n    outline: 3px solid var(--fourth-color)\r\n}\r\n\r\nbutton:hover{\r\n    background-color: var(--main-color);\r\n}\r\n\r\nlabel{\r\n    color: var(--fourth-color);\r\n    font-size: 24px;\r\n}'],sourceRoot:""}]);const c=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(a[l]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var l=n[c],d=r.base?l[0]+r.base:l[0],s=i[d]||0,A="".concat(d," ").concat(s);i[d]=s+1;var u=t(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var l=r(n,o),d=0;d<i.length;d++){var s=t(i[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=l}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var r={};(()=>{t.d(r,{Pd:()=>S,sY:()=>q,JQ:()=>k,h$:()=>T,G1:()=>j});var n=t(72),e=t.n(n),o=t(825),i=t.n(o),a=t(659),c=t.n(a),l=t(56),d=t.n(l),s=t(540),A=t.n(s),u=t(113),p=t.n(u),m=t(208),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),e()(m.A,f),m.A&&m.A.locals&&m.A.locals;class C{toDos=[];name="default project";constructor(n="Default Project",e=[]){this.name=n,this.toDos=e}get name(){return this.name}get toDos(){return this.toDos}addToDo(n){this.toDos.push(n)}}class v{title;description;dueDate;priority;constructor(n,e,t,r){this.title=n,this.description=e,this.dueDate=t,this.priority=r}get title(){return this.title}set title(n){this.title=n}get description(){return this.description}set description(n){this.description=n}get dueDate(){return this.dueDate}set dueDate(n){this.dueDate=n}get priority(){return this.priority}set priority(n){this.priority=n}}const h=document.querySelector(".toDos-container"),B=document.querySelector(".toDos-container").innerHTML;let I=document.querySelector(".project-add"),x=document.querySelector(".todo-add");I.addEventListener("click",(function(n){n.preventDefault();let e=k(),t=document.querySelector('input[name = "project-title"').value,r=new C(t);e.push(r),g(r),T()})),x.addEventListener("click",D);const y=["Low","Medium","High"];function g(n){const e=document.querySelector(".projects-container");let t=document.createElement("button");t.className="project";let r=document.createElement("div");r.className="project-title",r.textContent=n.name,t.appendChild(r),e.prepend(t),t.addEventListener("click",(e=>function(n,e){console.log("registered"),j(k().indexOf(e)),b(e.toDos)}(0,n)))}function b(n){h.innerHTML=B,x=document.querySelector(".todo-add"),x.addEventListener("click",D);for(let e=0;e<n.length;e++){let t=n[e],r=document.createElement("div");r.className="toDo";let o=document.createElement("div");o.className="toDo-title",o.textContent=t.title;let i=document.createElement("div");i.textContent="Title: ",i.style.color="white";let a=document.createElement("div");a.className="toDo-description",a.textContent=t.description;let c=document.createElement("div");c.style.color="white",c.textContent="Description: ";let l=document.createElement("input"),d=document.createElement("div");d.style.color="white",d.textContent="Due Date",l.type="date",l.name="date",l.value=t.dueDate,l.addEventListener("change",(()=>{t.dueDate=l.value,T()}));let s=document.createElement("div");s.className="toDo-priority",s.textContent=y[t.priority];let A=document.createElement("div");A.textContent="Priority: ",A.style.color="white";let u=document.createElement("button");u.textContent="-",u.className="todo-delete",u.addEventListener("click",(()=>{r.remove(),q(n,t)})),r.appendChild(i),r.appendChild(o),r.appendChild(c),r.appendChild(a),r.append(d),r.appendChild(l),r.appendChild(A),r.appendChild(s),r.appendChild(u),h.prepend(r)}}function D(n){n.preventDefault();const e=document.querySelector('input[name = "title"'),t=document.querySelector('input[name="description"'),r=document.querySelector('input[name="due-date"'),o=document.querySelector('input[name="priority"');S(e.value,t.value,r.value,o.value)}let w=[],E=0;function j(n){E=n}function k(){return w}function S(n,e,t,r){let o=new v(n,e,t,r);w[E].addToDo(o),T(),b(w[E].toDos)}function q(n,e){const t=n.indexOf(e);n.splice(t,1),T()}function T(){localStorage.setItem("projects",JSON.stringify(w))}!function(){if("projects"in localStorage){!function(){let n=JSON.parse(localStorage.getItem("projects"));n.forEach((n=>n.toDos.map((n=>new v(n.title,n.description,n.dueDate,n.priority))))),n.map((n=>new C(n.name,n.toDos))),w=n}();for(let n=0;n<w.length;n++)g(w[n]);return}let n=new C("LALA");w.push(n),g(n),E=0}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,